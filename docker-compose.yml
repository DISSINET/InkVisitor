version: "3.6"

services:
  database:
    image: rethinkdb
    container_name: "inkvisitor-database"
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "2"
    volumes:
      - database:/data
    networks:
      - inkvisitor
    ports:
      - "8080:8080"
      - "28015:28015"

  inkvisitor-development:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENV: development
    image: inkvisitor:development
    container_name: inkvisitor-development
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "2"
    env_file:
      - ./packages/server/env/.env.development
    ports:
      - "3000:3000"
    volumes:
      - inkvisitor-development-client:/app/client/dist
    networks:
      - inkvisitor

  inkvisitor-production:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENV: production
    image: inkvisitor:production
    container_name: inkvisitor-production
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "2"
    env_file:
      - ./packages/server/env/.env.production
    ports:
      - "3000:3000"
    volumes:
      - inkvisitor-production-client:/app/client/dist
    networks:
      - inkvisitor

  inkvisitor-staging:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENV: staging
    image: inkvisitor:staging
    container_name: inkvisitor-staging
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "2"
    env_file:
      - ./packages/server/env/.env.staging
    ports:
      - "3011:3000"
    volumes:
      - inkvisitor-staging-client:/app/client/dist
    networks:
      - inkvisitor

  inkvisitor-sandbox:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENV: sandbox
    image: inkvisitor:sandbox
    container_name: inkvisitor-sandbox
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "2"
    env_file:
      - ./packages/server/env/.env.sandbox
    ports:
      - "3012:3000"
    volumes:
      - inkvisitor-sandbox-client:/app/client/dist
    networks:
      - inkvisitor

  inkvisitor-data-import:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENV: data-import
    image: inkvisitor:data-import
    container_name: inkvisitor-data-import
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "2"
    env_file:
      - ./packages/server/env/.env.data-import
    ports:
      - "3013:3000"
    volumes:
      - inkvisitor-data-import-client:/app/client/dist
    networks:
      - inkvisitor

networks:
  inkvisitor:

volumes:
  database:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/inkvisitor-database"
  inkvisitor-production-client:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/inkvisitor-production-client"
  inkvisitor-development-client:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/inkvisitor-development-client"
  inkvisitor-staging-client:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/inkvisitor-staging-client"
  inkvisitor-sandbox-client:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/inkvisitor-sandbox-client"
  inkvisitor-data-import-client:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/inkvisitor-data-import-client"
